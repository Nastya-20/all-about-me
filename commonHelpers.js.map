{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["/// header\nconst modalOverlay = document.querySelector('.modal-overlay');\nconst burgerOpen = document.querySelector('.open-burger');\nconst btnClose = document.querySelector('.close-btn');\nconst mobileOrderBtn = document.querySelector('.order-mobile');\nconst navList = document.querySelector('.nav-list');\nconst modalClsBody = document.querySelector('body');\nconst modalMenu = document.querySelector('.menu-list');\n\nexport function openModalWindow() {\n    modalOverlay.classList.add('is-open-header');\n    burgerOpen.style.opacity = 'none';\n    modalClsBody.style.overflow = '';\n}\n\nexport function openMenu() {\n    if (document.querySelector('.is-open-header') ) {\n        modalMenu.classList.remove('is-open-header');\n    } else {\n        modalMenu.classList.add('is-open-header');\n    }\n}\n\nexport function closeModalWindow() {\n    modalOverlay.classList.remove('is-open-header');\n    burgerOpen.style.opacity = '';\n    modalClsBody.style.opacity = '';\n}\n\nexport function NavvMenu(evt) {\n    evt.preventDefault();\n    if (evt.target !== evt.currentTarget) {\n        return;\n    } else {\n        modalOverlay.classList.remove('is-open-header');\n        burgerOpen.style.opacity = '';\n        modalClsBody.style.overflow = '';\n    }\n}\n\nmobileOrderBtn.addEventListener('click', linkToFooter);\n\nexport function linkToFooter(evt) {\n    evt.preventDefault();\n    modalOverlay.classList.remove('is-open-header');\n    burgerOpen.style.opacity = '';\n    modalClsBody.style.overflow = '';\n\n    setTimeout(() => {\n        document.querySelector('#worktogether').scrollIntoView({ behavior: 'smooth' });\n    }, 100);\n}\n\nexport function NavMenu(evt) {\n    if (evt.target.tagName === 'A') {\n        modalOverlay.classList.remove('is-open-header');\n        burgerOpen.style.opacity = '';\n        modalClsBody.style.overflow = '';\n\n        const targetId = evt.target.getAttribute('href');\n\n        setTimeout(() => {\n            document.querySelector(targetId).scrollIntoView({ behavior: 'smooth' });\n        }, 100);\n    }\n}\n\n//aboutme\nimport Accordion from 'accordion-js';\nimport 'accordion-js/dist/accordion.min.css';\n\nexport const aboutSwiper = () => {\n    const swiper = new Swiper('.skills-conteiner', {\n        navigation: {\n            nextEl: '.my-next',\n        },\n        loop: true,\n        speed: 400,\n        mousewheel: true,\n        clickable: true,\n        keyboard: {\n            enabled: true,\n            onlyInViewport: false,\n        },\n        breakpoints: {\n            320: {\n                slidesPerView: 2,\n                spaceBetween: 0,\n            },\n            768: {\n                slidesPerView: 3,\n                spaceBetween: 0,\n            },\n            1440: {\n                slidesPerView: 6,\n                spaceBetween: 0,\n            },\n        },\n    });\n};\n\nexport function aboutme() {\n    const accordionContainers = Array.from(document.querySelectorAll('.acc-container'));\n    new Accordion(accordionContainers, {\n        duration: 600,\n        showMultiple: true,\n        onOpen: function (currentElement) {\n        },\n        openOnInit: [0]\n    });\n}\n\n//projects\nexport const swiperProjects = () => {\n    const swiper = new Swiper('.projects-js', {\n        slidesPerView: 1,\n        spaceBetween: 0,\n        keyboard: {\n            enabled: true,\n            onlyInViewport: false,\n        },\n        navigation: {\n            nextEl: '.project-button-next',\n            prevEl: '.project-button-prev',\n        },\n        on: {\n            reachEnd: () => {\n                document.querySelector('.project-button-next').classList.add('disabled');\n            },\n            reachBeginning: () => {\n                document.querySelector('.project-button-prev').classList.add('disabled');\n            },\n            fromEdge: () => {\n                document.querySelector('.project-button-prev').classList.remove('disabled');\n                document.querySelector('.project-button-next').classList.remove('disabled');\n            },\n        },\n    });\n}\n\n//faq\nexport function faq() {\n    const faqAccordionContainers = Array.from(document.querySelectorAll('.faq-accordion-container'));\n    new Accordion(faqAccordionContainers, {\n        duration: 600,\n        showMultiple: true,\n        onOpen: function (currentElement) {\n        },\n    });\n}\n\n//covers\nexport function setupCoverAnimation() {\n    document.addEventListener('DOMContentLoaded', () => {\n        const coversSection = document.querySelector('.cover-section');\n\n        const options = {\n            rootMargin: '0px',\n            threshold: 0,\n        };\n\n        const observerCallback = (entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    coversSection.classList.add('animate');\n                } else {\n                    coversSection.classList.remove('animate');\n                }\n            });\n        };\n\n        const observer = new IntersectionObserver(observerCallback, options);\n\n        if (coversSection) {\n            observer.observe(coversSection);\n        }\n    });\n}\n\n//reviews\nexport const fetchReviews = async () => {\n    try {\n        const response = await fetch('https://portfolio-js.b.goit.study/api/reviews', {\n            headers: {\n                'Accept': 'application/json'\n            }\n        });\n        if (!response.ok) {\n            if (response.status === 404) {\n                throw new Error('Not found');\n            } else if (response.status === 500) {\n                throw new Error('Server error');\n            } else {\n                throw new Error('An unknown error occurred');\n            }\n        }\n        const reviews = await response.json();\n        return reviews;\n    } catch (error) {\n        throw new Error(error.message);\n    }\n};\n\nexport const createReviewItem = (review) => {\n    return `\n        <li class=\"swiper-slide reviews-items\">\n            <img class=\"reviews-img\" src=\"${review.avatar_url}\" alt=\"${review.author}\" />\n            <h3 class=\"review-author\">${review.author}</h3>\n            <p class=\"review-text\">${review.review}</p>\n        </li>\n    `;\n};\n\nexport const initializeSlider = () => {\n    const swiper = new Swiper('.reviews-swiper', {\n        navigation: {\n            nextEl: '.review-button-next',\n            prevEl: '.review-button-prev',\n        },\n        keyboard: {\n            enabled: true,\n            onlyInViewport: false,\n        },\n        breakpoints: {\n            320: {\n                slidesPerView: 1,\n                spaceBetween: 16,\n            },\n            768: {\n                slidesPerView: 2,\n                spaceBetween: 16,\n            },\n            1440: {\n                slidesPerView: 4,\n                spaceBetween: 16,\n            },\n        },\n        on: {\n            reachEnd: () => {\n                document.querySelector('.review-button-next').classList.add('disabled');\n            },\n            reachBeginning: () => {\n                document.querySelector('.review-button-prev').classList.add('disabled');\n            },\n            fromEdge: () => {\n                document.querySelector('.review-button-prev').classList.remove('disabled');\n                document.querySelector('.review-button-next').classList.remove('disabled');\n            },\n        },\n    });\n};\n\nexport const displayReviews = async () => {\n    try {\n        const reviews = await fetchReviews();\n        const reviewsList = document.querySelector('.reviews-list');\n        reviewsList.innerHTML = reviews.map(createReviewItem).join('');\n        initializeSlider();\n    } catch (error) {\n        document.querySelector('.reviews-container').innerHTML = `<p class=\"error-message\">${error.message}</p>`;\n    }\n};\n\n//worktogether\nexport function validateEmail(email) {\n    const emailPattern = /^\\w+(\\.\\w+)?@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n    return emailPattern.test(email);\n}\n\nconst feedbackForm = document.querySelector('.js-form');\nconst modalWindow = document.querySelector('.js-modal-backdrop');\n\ndocument.addEventListener('keydown', function (e) {\n    if (e.key === 'Escape' && modalWindow.classList.contains('is-open')) {\n        modalWindow.classList.remove('is-open');\n        document.body.style.overflow = 'auto';\n    }\n});\n\nfunction eventHandler(e) {\n    e.preventDefault();\n    modalWindow.classList.add('is-open');\n    document.body.style.overflow = 'hidden';\n}\n\nfunction modalWindowClose(e) {\n    const modalClose = e.target.closest('.js-modal-close');\n    if (e.target === modalWindow || modalClose) {\n        modalWindow.classList.remove('is-open');\n        document.body.style.overflow = 'auto';\n    }\n}\n\nexport { feedbackForm, modalWindow, eventHandler, modalWindowClose };\n"],"names":["modalOverlay","burgerOpen","mobileOrderBtn","modalClsBody","linkToFooter","evt","modalWindow","e"],"mappings":"+vBACA,MAAMA,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAa,SAAS,cAAc,cAAc,EACvC,SAAS,cAAc,YAAY,EACpD,MAAMC,EAAiB,SAAS,cAAc,eAAe,EAC7C,SAAS,cAAc,WAAW,EAClD,MAAMC,EAAe,SAAS,cAAc,MAAM,EAChC,SAAS,cAAc,YAAY,EAiCrDD,EAAe,iBAAiB,QAASE,CAAY,EAE9C,SAASA,EAAaC,EAAK,CAC9BA,EAAI,eAAc,EAClBL,EAAa,UAAU,OAAO,gBAAgB,EAC9CC,EAAW,MAAM,QAAU,GAC3BE,EAAa,MAAM,SAAW,GAE9B,WAAW,IAAM,CACb,SAAS,cAAc,eAAe,EAAE,eAAe,CAAE,SAAU,QAAQ,CAAE,CAChF,EAAE,GAAG,CACV,CA0NqB,SAAS,cAAc,UAAU,EACtD,MAAMG,EAAc,SAAS,cAAc,oBAAoB,EAE/D,SAAS,iBAAiB,UAAW,SAAUC,EAAG,CAC1CA,EAAE,MAAQ,UAAYD,EAAY,UAAU,SAAS,SAAS,IAC9DA,EAAY,UAAU,OAAO,SAAS,EACtC,SAAS,KAAK,MAAM,SAAW,OAEvC,CAAC"}